{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst DIRECT_API_URL = 'https://35.78.71.239:8081/digitalbooks/';\nconst API_URL = 'https://671e0i80l8.execute-api.ap-northeast-1.amazonaws.com/DEV/';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n  }\n  // getPublicContent(): Observable<any> {\n  //   return this.http.get(API_URL + 'all', { responseType: 'text' });\n  // }\n  //author/{author-id}/books\n  //digitalbook/book/save-book/{author-id}\n  createBook(image, create, authorId) {\n    const formdata = new FormData();\n    formdata.append('image', image);\n    formdata.append('title', create.title);\n    formdata.append('category', create.category);\n    formdata.append('price', create.price);\n    formdata.append('publisher', create.publisher);\n    formdata.append('active', create.active);\n    formdata.append('content', create.content);\n    // return this.http.post(DIRECT_API_URL +'author/'+authorId+'/books',formdata, { responseType: 'json' });\n    return this.http.post(API_URL + 'digitalbook/book/save-book/' + authorId, formdata, httpOptions);\n  }\n  //author/{author-id}/books/{book-id}\n  // digitalbook/book/save-book/{author-id}/{book-id}\n  updateBook(image, update, authorId, bookId) {\n    const formdata = new FormData();\n    formdata.append('image', image);\n    formdata.append('title', update.title);\n    formdata.append('category', update.category);\n    formdata.append('price', update.price);\n    formdata.append('publisher', update.publisher);\n    formdata.append('active', update.active);\n    formdata.append('content', update.content);\n    return this.http.put(DIRECT_API_URL + 'author/' + authorId + '/books/' + bookId, formdata, {\n      responseType: 'json'\n    });\n    // return this.http.put(API_URL +'digitalbook/book/save-book/'+authorId+'/'+bookId,formdata, httpOptions);\n  }\n  // digitalbook/book/search-book/author-id/{author-id}\n  getAllBooks(authorId) {\n    // return this.http.get(API_URL + 'author/'+authorId, { responseType: 'json' });\n    return this.http.get(API_URL + 'digitalbook/book/search-book/author-id/' + authorId, {\n      responseType: 'json'\n    });\n  }\n  // digitalbook/book/search-book/{id}\n  getBook(bookId) {\n    // return this.http.get(API_URL + 'test/'+bookId, { responseType: 'json' });\n    return this.http.get(API_URL + 'digitalbook/book/search-book/' + bookId, {\n      responseType: 'json'\n    });\n  }\n  // author/{author-id}/books/{book-id}/{block}\n  // digitalbook/book/save-book/{author-id}/{book-id}/{block}\n  blockOrUnblockBook(authorId, bookId, block) {\n    // return this.http.put(API_URL + 'author/'+authorId+'/books/'+bookId+\"/\"+block, { responseType: 'json' });\n    return this.http.put(API_URL + 'digitalbook/book/save-book/' + authorId + '/' + bookId + \"/\" + block, {\n      responseType: 'json'\n    });\n  }\n  //readers/{emailId}/books\n  // digitalbook/user/subscribtion/subscribed-books/{email}\n  getSubscribedBooks(readerEmail) {\n    // return this.http.get(API_URL + 'readers/'+readerEmail+\"/books\", { responseType: 'json' });\n    return this.http.get(API_URL + 'digitalbook/user/subscribtion/subscribed-books/' + readerEmail, {\n      responseType: 'json'\n    });\n  }\n  //readers/{email-id}/books/{subscription-id}/cancel-subscription\n  // digitalbook/user/subscribtion/content/{email}/{sub-id}\n  unSubscriveBook(readerEmail, subscriptionId) {\n    // return this.http.put(API_URL + 'readers/'+readerEmail+'/books/'+subscriptionId+\"/cancel-subscription\", { responseType: 'json' });\n    return this.http.put(API_URL + 'digitalbook/user/subscribtion/content/' + readerEmail + '/' + subscriptionId, {\n      responseType: 'json'\n    });\n  }\n  ///{book-id}/subscribe\n  // digitalbook/user/subscribtion/subscribe/{book-id}\n  subscribeBook(email, bookId) {\n    // return this.http.post(API_URL +bookId+'/subscribe',{\n    //   bookId,\n    //   email\n    // }, { responseType: 'json' });\n    return this.http.post(API_URL + 'digitalbook/user/subscribtion/subscribe/' + bookId, {\n      bookId,\n      email\n    }, {\n      responseType: 'json'\n    });\n  }\n  //readers/{emailId}/books/{subscription-id}/read\n  // digitalbook/user/subscribtion/content/{email}/{sub-id}\n  getBookContent(readerEmail, subscriptionId) {\n    // return this.http.get(API_URL + 'readers/'+readerEmail+'/books/'+subscriptionId+\"/read\", { responseType: 'json' });\n    return this.http.get(API_URL + 'digitalbook/user/subscribtion/content/' + readerEmail + '/' + subscriptionId, {\n      responseType: 'json'\n    });\n  }\n  //all/authors\n  // getAllAuthors(): Observable<any> {\n  //   return this.http.get(API_URL + 'all/authors', { responseType: 'json' });\n  // }\n  //'searchBook?title=&author=&publishedDate=&publisher='\n  // search-book?title=&author=&publishedDate=&publisher=\n  searchBook(searchQuery) {\n    if (searchQuery === null || searchQuery === undefined) return this.http.get(API_URL + \"digitalbook/book/\" + 'search-book?title=&author=&publishedDate=&publisher=', {\n      responseType: 'json'\n    });\n    return this.http.get(API_URL + \"digitalbook/book/\" + searchQuery, {\n      responseType: 'json'\n    });\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}