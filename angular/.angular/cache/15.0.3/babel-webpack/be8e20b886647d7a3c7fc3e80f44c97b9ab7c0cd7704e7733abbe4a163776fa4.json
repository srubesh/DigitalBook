{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/user.service\";\nimport * as i2 from \"../_services/token-storage.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nexport class SearchBooksComponent {\n  constructor(userService, tokenStorageService) {\n    this.userService = userService;\n    this.tokenStorageService = tokenStorageService;\n    this.isLoggedIn = false;\n    this.readerEmail = \"\";\n    this.readerId = 0;\n    this.users = [];\n    this.books = [];\n    this.search = {\n      title: \"\",\n      author: \"\",\n      publisher: \"\",\n      releasedDate: \"\"\n    };\n  }\n  ngOnInit() {\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\n    if (this.isLoggedIn) {\n      const user = this.tokenStorageService.getUser();\n      this.readerEmail = user.email;\n      this.readerId = user.id;\n    }\n  }\n  searchBook() {\n    console.log(this.search.title);\n    console.log(this.search.author);\n    console.log(this.search.publisher);\n    console.log(this.search.releasedDate);\n    sessionStorage.setItem(\"searchQuery\", 'searchBook?title=' + this.search.title + '&author=' + this.search.author + '&publishedDate=' + this.search.releasedDate + '&publisher=' + this.search.publisher);\n  }\n}\nSearchBooksComponent.ɵfac = function SearchBooksComponent_Factory(t) {\n  return new (t || SearchBooksComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.TokenStorageService));\n};\nSearchBooksComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SearchBooksComponent,\n  selectors: [[\"app-search-books\"]],\n  decls: 41,\n  vars: 4,\n  consts: [[1, \"col-md-12\"], [1, \"card\", \"container\", \"d-flex\", \"justify-content-center\"], [\"name\", \"myForm\", \"novalidate\", \"\", 3, \"ngSubmit\"], [\"myForm\", \"ngForm\"], [2, \"text-align\", \"center\"], [1, \"form-group\"], [\"for\", \"title\"], [\"type\", \"text\", \"name\", \"title\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"title\", \"ngModel\"], [\"for\", \"author\"], [\"type\", \"text\", \"name\", \"author\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"author\", \"ngModel\"], [\"for\", \"publisher\"], [\"type\", \"text\", \"name\", \"publisher\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"publisher\", \"ngModel\"], [\"for\", \"releasedDate\"], [\"type\", \"date\", \"name\", \"releasedDate\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"releasedDate\", \"ngModel\"], [\"href\", \"/search\", \"routerLink\", \"searchresult\", 1, \"nav-link\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"btn-block\", \"float-end\", 2, \"margin-left\", \"40px\", 3, \"click\"]],\n  template: function SearchBooksComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r5 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelement(0, \"br\");\n      i0.ɵɵelementStart(1, \"div\", 0)(2, \"div\", 1)(3, \"form\", 2, 3);\n      i0.ɵɵlistener(\"ngSubmit\", function SearchBooksComponent_Template_form_ngSubmit_3_listener() {\n        i0.ɵɵrestoreView(_r5);\n        const _r0 = i0.ɵɵreference(4);\n        return i0.ɵɵresetView(_r0.form.valid);\n      });\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"h4\");\n      i0.ɵɵtext(7, \"Search Books\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"label\", 6)(10, \"b\");\n      i0.ɵɵtext(11, \"Title\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"input\", 7, 8);\n      i0.ɵɵlistener(\"ngModelChange\", function SearchBooksComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.search.title = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(14, \"br\");\n      i0.ɵɵelementStart(15, \"div\", 5)(16, \"label\", 9)(17, \"b\");\n      i0.ɵɵtext(18, \"Author\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"input\", 10, 11);\n      i0.ɵɵlistener(\"ngModelChange\", function SearchBooksComponent_Template_input_ngModelChange_19_listener($event) {\n        return ctx.search.author = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(21, \"br\");\n      i0.ɵɵelementStart(22, \"div\", 5)(23, \"label\", 12)(24, \"b\");\n      i0.ɵɵtext(25, \"Publisher\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"input\", 13, 14);\n      i0.ɵɵlistener(\"ngModelChange\", function SearchBooksComponent_Template_input_ngModelChange_26_listener($event) {\n        return ctx.search.publisher = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(28, \"br\");\n      i0.ɵɵelementStart(29, \"div\", 5)(30, \"label\", 15)(31, \"b\");\n      i0.ɵɵtext(32, \"Released Date\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(33, \"input\", 16, 17);\n      i0.ɵɵlistener(\"ngModelChange\", function SearchBooksComponent_Template_input_ngModelChange_33_listener($event) {\n        return ctx.search.releasedDate = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(35, \"br\");\n      i0.ɵɵelementStart(36, \"div\", 5)(37, \"a\", 18)(38, \"button\", 19);\n      i0.ɵɵlistener(\"click\", function SearchBooksComponent_Template_button_click_38_listener() {\n        return ctx.searchBook();\n      });\n      i0.ɵɵtext(39, \" Search \");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelement(40, \"br\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngModel\", ctx.search.title);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.search.author);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.search.publisher);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.search.releasedDate);\n    }\n  },\n  dependencies: [i3.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;AAUA,OAAM,MAAOA,oBAAoB;EAE/BC,YAAoBC,WAAwB,EAAUC,mBAAwC;IAA1E,gBAAW,GAAXD,WAAW;IAAuB,wBAAmB,GAAnBC,mBAAmB;IAEzE,eAAU,GAAG,KAAK;IAClB,gBAAW,GAAY,EAAE;IACzB,aAAQ,GAAY,CAAC;IACrB,UAAK,GAAQ,EAAE;IAEf,UAAK,GAAQ,EAAE;IAEf,WAAM,GAAG;MACPC,KAAK,EAAG,EAAE;MACVC,MAAM,EAAG,EAAE;MACXC,SAAS,EAAG,EAAE;MACdC,YAAY,EAAG;KAChB;EAdiG;EAgBlGC,QAAQ;IACN,IAAI,CAACC,UAAU,GAAG,CAAC,CAAC,IAAI,CAACN,mBAAmB,CAACO,QAAQ,EAAE;IACvD,IAAI,IAAI,CAACD,UAAU,EAAE;MACnB,MAAME,IAAI,GAAG,IAAI,CAACR,mBAAmB,CAACS,OAAO,EAAE;MAC/C,IAAI,CAACC,WAAW,GAAGF,IAAI,CAACG,KAAK;MAC7B,IAAI,CAACC,QAAQ,GAAGJ,IAAI,CAACK,EAAE;;EAG3B;EAEAC,UAAU;IACRC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,MAAM,CAAChB,KAAK,CAAC;IAC9Bc,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,MAAM,CAACf,MAAM,CAAC;IAC/Ba,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,MAAM,CAACd,SAAS,CAAC;IAClCY,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,MAAM,CAACb,YAAY,CAAC;IAErCc,cAAc,CAACC,OAAO,CAAC,aAAa,EAAC,mBAAmB,GAAC,IAAI,CAACF,MAAM,CAAChB,KAAK,GAAC,UAAU,GAAC,IAAI,CAACgB,MAAM,CAACf,MAAM,GAAC,iBAAiB,GAAC,IAAI,CAACe,MAAM,CAACb,YAAY,GAAC,aAAa,GAAC,IAAI,CAACa,MAAM,CAACd,SAAS,CAAC;EAC1L;;AAnCWN,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCVjCC,qBAAI;MACJA,8BAAuB;MAGXA;QAAAA;QAAA;QAAA,OAAYA,8BAAiB;MAAA,EAAE;MAC/BA,8BAAiC;MACzBA,4BAAY;MAAAA,iBAAK;MAEzBA,8BAAwB;MACGA,sBAAK;MAAAA,iBAAI;MAChCA,oCACuB;MAD8BA;QAAA;MAAA,EAA0B;MAA/EA,iBACuB;MAK3BA,sBAAI;MACJA,+BAAwB;MACIA,uBAAM;MAAAA,iBAAI;MAClCA,sCACwB;MAD8BA;QAAA;MAAA,EAA2B;MAAjFA,iBACwB;MAK5BA,sBAAI;MACJA,+BAAwB;MACOA,0BAAS;MAAAA,iBAAI;MACxCA,sCAC2B;MAD8BA;QAAA;MAAA,EAA8B;MAAvFA,iBAC2B;MAK/BA,sBAAI;MACJA,+BAAwB;MACUA,8BAAa;MAAAA,iBAAI;MAC/CA,sCAC8B;MAD8BA;QAAA;MAAA,EAAiC;MAA7FA,iBAC8B;MAKlCA,sBAAI;MACJA,+BAAwB;MAGhBA;QAAA,OAASC,gBAAY;MAAA,EAAC;MAClBD,yBACJ;MAAAA,iBAAS;MAIrBA,sBAAI;MACRA,iBAAM;;;MA5C2DA,gBAA0B;MAA1BA,0CAA0B;MASzBA,eAA2B;MAA3BA,2CAA2B;MASxBA,eAA8B;MAA9BA,8CAA8B;MAS3BA,eAAiC;MAAjCA,iDAAiC","names":["SearchBooksComponent","constructor","userService","tokenStorageService","title","author","publisher","releasedDate","ngOnInit","isLoggedIn","getToken","user","getUser","readerEmail","email","readerId","id","searchBook","console","log","search","sessionStorage","setItem","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["R:\\Rubesh\\Personal\\Documents\\Work Experience\\03_Cognizant\\H&T Training\\Workspace\\Angular\\DigitalBook\\src\\app\\search-books\\search-books.component.ts","R:\\Rubesh\\Personal\\Documents\\Work Experience\\03_Cognizant\\H&T Training\\Workspace\\Angular\\DigitalBook\\src\\app\\search-books\\search-books.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { TokenStorageService } from '../_services/token-storage.service';\nimport { UserService } from '../_services/user.service';\n\n@Component({\n  selector: 'app-search-books',\n  templateUrl: './search-books.component.html',\n  styleUrls: ['./search-books.component.css']\n})\nexport class SearchBooksComponent implements OnInit {\n\n  constructor(private userService: UserService, private tokenStorageService: TokenStorageService) { }\n  \n  isLoggedIn = false;\n  readerEmail : string = \"\";\n  readerId : number = 0;\n  users :any = [];\n  content?: string[];\n  books :any = [];\n  \n  search = {\n    title : \"\",\n    author : \"\",\n    publisher : \"\",\n    releasedDate : \"\"\n  }\n\n  ngOnInit(): void {\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\n    if (this.isLoggedIn) {\n      const user = this.tokenStorageService.getUser();\n      this.readerEmail = user.email;\n      this.readerId = user.id;\n    }\n    \n  }\n\n  searchBook(){\n    console.log(this.search.title);\n    console.log(this.search.author);\n    console.log(this.search.publisher);\n    console.log(this.search.releasedDate);\n\n    sessionStorage.setItem(\"searchQuery\",'searchBook?title='+this.search.title+'&author='+this.search.author+'&publishedDate='+this.search.releasedDate+'&publisher='+this.search.publisher);\n  }\n\n}\n","<br>\n<div class=\"col-md-12\">\n    <div class=\"card container  d-flex justify-content-center\">\n        <form name=\"myForm\"  #myForm=\"ngForm\" novalidate\n            (ngSubmit)=\"myForm.form.valid \">\n            <div style=\"text-align: center;\">\n                <h4>Search Books</h4>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"title\"> <b>Title</b> </label>\n                <input type=\"text\" class=\"form-control\" name=\"title\" [(ngModel)]=\"search.title\" \n                    #title=\"ngModel\" />\n                <!-- <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"title.errors && title.touched\">\n                    Title is required!\n                </div> -->\n            </div>\n            <br>\n            <div class=\"form-group\">\n                <label for=\"author\"> <b>Author</b> </label>\n                <input type=\"text\" class=\"form-control\" name=\"author\" [(ngModel)]=\"search.author\" \n                    #author=\"ngModel\" />\n                <!-- <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"author.errors && myForm.submitted\">\n                    Author is required!\n                </div> -->\n            </div>\n            <br>\n            <div class=\"form-group\">\n                <label for=\"publisher\"> <b>Publisher</b> </label>\n                <input type=\"text\" class=\"form-control\" name=\"publisher\" [(ngModel)]=\"search.publisher\" \n                    #publisher=\"ngModel\" />\n                <!-- <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"publisher.errors && myForm.submitted\">\n                    Publisher is required!\n                </div> -->\n            </div>\n            <br>\n            <div class=\"form-group\">\n                <label for=\"releasedDate\"> <b>Released Date</b> </label>\n                <input type=\"date\" class=\"form-control\" name=\"releasedDate\" [(ngModel)]=\"search.releasedDate\" \n                    #releasedDate=\"ngModel\" />\n                <!-- <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"releasedDate.errors && myForm.submitted\">\n                    Released Date is required!\n                </div> -->\n            </div>\n            <br>\n            <div class=\"form-group\">\n                <a href=\"/search\" class=\"nav-link\" routerLink=\"searchresult\">\n                    <button class=\"btn btn-primary btn-block float-end\" type=\"button\" style=\"margin-left: 40px;\"\n                    (click)=\"searchBook()\">\n                        Search\n                    </button>\n                </a>\n            </div>\n        </form>\n        <br>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}