{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/user.service\";\nimport * as i2 from \"../_services/token-storage.service\";\nexport class AllMyBooksComponent {\n  //jsonVar  = {};\n  constructor(userService, tokenStorageService) {\n    this.userService = userService;\n    this.tokenStorageService = tokenStorageService;\n    this.books = [];\n    this.isLoggedIn = false;\n    this.authorId = 0;\n  }\n  ngOnInit() {\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\n    if (this.isLoggedIn) {\n      const user = this.tokenStorageService.getUser();\n      this.authorId = user.id;\n    }\n    this.userService.getAllBooks(this.authorId).subscribe(data => {\n      this.books = data;\n      this.display(this.books);\n    }, err => {\n      this.content = JSON.parse(err.error).message;\n    });\n  }\n  display(books) {}\n}\nAllMyBooksComponent.ɵfac = function AllMyBooksComponent_Factory(t) {\n  return new (t || AllMyBooksComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.TokenStorageService));\n};\nAllMyBooksComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AllMyBooksComponent,\n  selectors: [[\"app-all-my-books\"]],\n  decls: 15,\n  vars: 0,\n  consts: [[1, \"card\", \"container\"], [1, \"col-md-12\"], [1, \"card\", \"bg-light\", \"mb-3\"], [1, \"card-header\"], [1, \"card-body\"], [1, \"row\"], [1, \"col\"], [1, \"card-title\"], [1, \"card-text\"]],\n  template: function AllMyBooksComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"br\");\n      i0.ɵɵelementStart(1, \"ul\", 0);\n      i0.ɵɵelement(2, \"br\");\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"div\", 3);\n      i0.ɵɵtext(6, \"Header\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 4)(8, \"div\", 5)(9, \"div\", 6)(10, \"h5\", 7);\n      i0.ɵɵtext(11, \"Light card title\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 6)(13, \"p\", 8);\n      i0.ɵɵtext(14, \"Some quick example text to build on the card title and make up the bulk of the card's content.\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AASA,OAAM,MAAOA,mBAAmB;EAI9B;EAEAC,YAAoBC,WAAwB,EAASC,mBAAwC;IAAzE,gBAAW,GAAXD,WAAW;IAAsB,wBAAmB,GAAnBC,mBAAmB;IAHxE,UAAK,GAAQ,EAAE;IAKf,eAAU,GAAG,KAAK;IAClB,aAAQ,GAAY,CAAC;EAH4E;EAKjGC,QAAQ;IACN,IAAI,CAACC,UAAU,GAAG,CAAC,CAAC,IAAI,CAACF,mBAAmB,CAACG,QAAQ,EAAE;IACvD,IAAI,IAAI,CAACD,UAAU,EAAE;MACnB,MAAME,IAAI,GAAG,IAAI,CAACJ,mBAAmB,CAACK,OAAO,EAAE;MAC/C,IAAI,CAACC,QAAQ,GAAGF,IAAI,CAACG,EAAE;;IAEzB,IAAI,CAACR,WAAW,CAACS,WAAW,CAAC,IAAI,CAACF,QAAQ,CAAC,CAACG,SAAS,CACnDC,IAAI,IAAG;MACP,IAAI,CAACC,KAAK,GAAGD,IAAI;MACjB,IAAI,CAACE,OAAO,CAAC,IAAI,CAACD,KAAK,CAAC;IACxB,CAAC,EACDE,GAAG,IAAG;MACJ,IAAI,CAACC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,GAAG,CAACI,KAAK,CAAC,CAACC,OAAO;IAC9C,CAAC,CACF;EAEH;EAEAN,OAAO,CAACD,KAAW,GAEnB;;AA/BWd,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAsB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCRhCC,qBAAI;MACJA,6BAA2B;MACvBA,qBAAI;MACJA,8BAAuB;MAEUA,sBAAM;MAAAA,iBAAM;MACrCA,8BAAuB;MAGYA,iCAAgB;MAAAA,iBAAK;MAEhDA,+BAAiB;MACQA,+GACE;MAAAA,iBAAI","names":["AllMyBooksComponent","constructor","userService","tokenStorageService","ngOnInit","isLoggedIn","getToken","user","getUser","authorId","id","getAllBooks","subscribe","data","books","display","err","content","JSON","parse","error","message","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["R:\\Rubesh\\Personal\\Documents\\Work Experience\\03_Cognizant\\H&T Training\\Workspace\\Angular\\DigitalBook\\src\\app\\all-my-books\\all-my-books.component.ts","R:\\Rubesh\\Personal\\Documents\\Work Experience\\03_Cognizant\\H&T Training\\Workspace\\Angular\\DigitalBook\\src\\app\\all-my-books\\all-my-books.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TokenStorageService } from '../_services/token-storage.service';\nimport { UserService } from '../_services/user.service';\n\n@Component({\n  selector: 'app-all-my-books',\n  templateUrl: './all-my-books.component.html',\n  styleUrls: ['./all-my-books.component.css']\n})\nexport class AllMyBooksComponent implements OnInit {\n  content?: string[];\n\n  books :any = [];\n  //jsonVar  = {};\n\n  constructor(private userService: UserService,private tokenStorageService: TokenStorageService) { }\n  \n  isLoggedIn = false;\n  authorId : number = 0;\n\n  ngOnInit(): void {\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\n    if (this.isLoggedIn) {\n      const user = this.tokenStorageService.getUser();\n      this.authorId = user.id;\n    }\n    this.userService.getAllBooks(this.authorId).subscribe(\n      data => {\n      this.books = data;\n      this.display(this.books);\n      },\n      err => {\n        this.content = JSON.parse(err.error).message;\n      }\n    );\n\n  }\n\n  display(books : any) : void {\n\n  }\n  \n}\n","<!-- <ul *ngFor=\"let book of books\"> -->\n<br>\n<ul class=\"card container\">\n    <br>\n    <div class=\"col-md-12\">\n        <div class=\"card bg-light mb-3\">\n            <div class=\"card-header\">Header</div>\n            <div class=\"card-body\">\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <h5 class=\"card-title\">Light card title</h5>\n                    </div>\n                    <div class=\"col\">\n                        <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of\n                            the card's content.</p>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    </div>\n</ul>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}