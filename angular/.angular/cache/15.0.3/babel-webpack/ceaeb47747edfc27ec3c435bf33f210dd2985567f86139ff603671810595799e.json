{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/user.service\";\nimport * as i2 from \"../_services/token-storage.service\";\nexport class SearchResultComponent {\n  constructor(userService, tokenStorageService) {\n    this.userService = userService;\n    this.tokenStorageService = tokenStorageService;\n    this.isLoggedIn = false;\n    this.readerEmail = \"\";\n    this.readerId = 0;\n    this.books = [];\n    this.searchQuery = \"\";\n  }\n  ngOnInit() {\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\n    if (this.isLoggedIn) {\n      const user = this.tokenStorageService.getUser();\n      this.readerEmail = user.email;\n      this.readerId = user.id;\n      this.searchQuery = sessionStorage.getItem(\"searchQuery\");\n      this.userService.searchBook(this.searchQuery).subscribe(data => {\n        this.books = data;\n        //console.log(this.books);\n        //this.display(this.books);\n      }, err => {\n        this.content = JSON.parse(err.error).message;\n      });\n    }\n  }\n}\nSearchResultComponent.ɵfac = function SearchResultComponent_Factory(t) {\n  return new (t || SearchResultComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.TokenStorageService));\n};\nSearchResultComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SearchResultComponent,\n  selectors: [[\"app-search-result\"]],\n  decls: 2,\n  vars: 0,\n  template: function SearchResultComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"search-result works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AASA,OAAM,MAAOA,qBAAqB;EAEhCC,YAAoBC,WAAwB,EAAUC,mBAAwC;IAA1E,gBAAW,GAAXD,WAAW;IAAuB,wBAAmB,GAAnBC,mBAAmB;IAEzE,eAAU,GAAG,KAAK;IAClB,gBAAW,GAAY,EAAE;IACzB,aAAQ,GAAY,CAAC;IAErB,UAAK,GAAQ,EAAE;IACf,gBAAW,GAAQ,EAAE;EAP6E;EASlGC,QAAQ;IACN,IAAI,CAACC,UAAU,GAAG,CAAC,CAAC,IAAI,CAACF,mBAAmB,CAACG,QAAQ,EAAE;IACvD,IAAI,IAAI,CAACD,UAAU,EAAE;MACnB,MAAME,IAAI,GAAG,IAAI,CAACJ,mBAAmB,CAACK,OAAO,EAAE;MAC/C,IAAI,CAACC,WAAW,GAAGF,IAAI,CAACG,KAAK;MAC7B,IAAI,CAACC,QAAQ,GAAGJ,IAAI,CAACK,EAAE;MAEvB,IAAI,CAACC,WAAW,GAAGC,cAAc,CAACC,OAAO,CAAC,aAAa,CAAC;MAExD,IAAI,CAACb,WAAW,CAACc,UAAU,CAAC,IAAI,CAACH,WAAW,CAAC,CAACI,SAAS,CACrDC,IAAI,IAAG;QACP,IAAI,CAACC,KAAK,GAAGD,IAAI;QACjB;QACA;MACA,CAAC,EACDE,GAAG,IAAG;QACJ,IAAI,CAACC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,GAAG,CAACI,KAAK,CAAC,CAACC,OAAO;MAC9C,CAAC,CACF;;EAEL;;AA/BWzB,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAA0B;EAAAC;EAAAC;EAAAC;IAAA;MCTlCC,yBAAG;MAAAA,oCAAoB;MAAAA,iBAAI","names":["SearchResultComponent","constructor","userService","tokenStorageService","ngOnInit","isLoggedIn","getToken","user","getUser","readerEmail","email","readerId","id","searchQuery","sessionStorage","getItem","searchBook","subscribe","data","books","err","content","JSON","parse","error","message","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["R:\\Rubesh\\Personal\\Documents\\Work Experience\\03_Cognizant\\H&T Training\\Workspace\\Angular\\DigitalBook\\src\\app\\search-result\\search-result.component.ts","R:\\Rubesh\\Personal\\Documents\\Work Experience\\03_Cognizant\\H&T Training\\Workspace\\Angular\\DigitalBook\\src\\app\\search-result\\search-result.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TokenStorageService } from '../_services/token-storage.service';\nimport { UserService } from '../_services/user.service';\n\n@Component({\n  selector: 'app-search-result',\n  templateUrl: './search-result.component.html',\n  styleUrls: ['./search-result.component.css']\n})\nexport class SearchResultComponent implements OnInit {\n\n  constructor(private userService: UserService, private tokenStorageService: TokenStorageService) { }\n\n  isLoggedIn = false;\n  readerEmail : string = \"\";\n  readerId : number = 0;\n  content?: string[];\n  books :any = [];\n  searchQuery : any =\"\";\n\n  ngOnInit(): void {\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\n    if (this.isLoggedIn) {\n      const user = this.tokenStorageService.getUser();\n      this.readerEmail = user.email;\n      this.readerId = user.id;\n\n      this.searchQuery = sessionStorage.getItem(\"searchQuery\");\n\n      this.userService.searchBook(this.searchQuery).subscribe(\n        data => {\n        this.books = data;\n        //console.log(this.books);\n        //this.display(this.books);\n        },\n        err => {\n          this.content = JSON.parse(err.error).message;\n        }\n      );\n    }\n  }\n\n\n}\n","<p>search-result works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}