{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/user.service\";\nimport * as i2 from \"../_services/token-storage.service\";\nexport class ReadBookComponent {\n  constructor(userService, tokenStorageService) {\n    this.userService = userService;\n    this.tokenStorageService = tokenStorageService;\n    this.books = [];\n    this.isLoggedIn = false;\n    this.readerEmail = \"\";\n    this.readerId = 0;\n    this.message = null;\n  }\n  ngOnInit() {\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\n    if (this.isLoggedIn) {\n      const user = this.tokenStorageService.getUser();\n      this.readerEmail = user.email;\n      this.readerId = user.id;\n    }\n    this.userService.getBookContent(this.readerEmail, this.readerId + \"_\" + this.bookId).subscribe(data => {\n      this.books = data;\n      //this.display(this.books);\n    }, err => {\n      this.content = JSON.parse(err.error).message;\n    });\n  }\n}\nReadBookComponent.ɵfac = function ReadBookComponent_Factory(t) {\n  return new (t || ReadBookComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.TokenStorageService));\n};\nReadBookComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ReadBookComponent,\n  selectors: [[\"app-read-book\"]],\n  inputs: {\n    bookId: \"bookId\"\n  },\n  decls: 2,\n  vars: 0,\n  template: function ReadBookComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"read-book works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AASA,OAAM,MAAOA,iBAAiB;EAI5BC,YAAoBC,WAAwB,EAASC,mBAAwC;IAAzE,gBAAW,GAAXD,WAAW;IAAsB,wBAAmB,GAAnBC,mBAAmB;IAGxE,UAAK,GAAQ,EAAE;IACf,eAAU,GAAG,KAAK;IAClB,gBAAW,GAAY,EAAE;IACzB,aAAQ,GAAY,CAAC;IACrB,YAAO,GAAS,IAAI;EAP6E;EAWjGC,QAAQ;IACN,IAAI,CAACC,UAAU,GAAG,CAAC,CAAC,IAAI,CAACF,mBAAmB,CAACG,QAAQ,EAAE;IACvD,IAAI,IAAI,CAACD,UAAU,EAAE;MACnB,MAAME,IAAI,GAAG,IAAI,CAACJ,mBAAmB,CAACK,OAAO,EAAE;MAC/C,IAAI,CAACC,WAAW,GAAGF,IAAI,CAACG,KAAK;MAC7B,IAAI,CAACC,QAAQ,GAAGJ,IAAI,CAACK,EAAE;;IAGzB,IAAI,CAACV,WAAW,CAACW,cAAc,CAAC,IAAI,CAACJ,WAAW,EAAC,IAAI,CAACE,QAAQ,GAAC,GAAG,GAAC,IAAI,CAACG,MAAM,CAAC,CAACC,SAAS,CACvFC,IAAI,IAAG;MACP,IAAI,CAACC,KAAK,GAAGD,IAAI;MACjB;IACA,CAAC,EACDE,GAAG,IAAG;MACJ,IAAI,CAACC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,GAAG,CAACI,KAAK,CAAC,CAACC,OAAO;IAC9C,CAAC,CACF;EAEH;;AAjCWvB,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAwB;EAAAC;IAAAX;EAAA;EAAAY;EAAAC;EAAAC;IAAA;MCT9BC,yBAAG;MAAAA,gCAAgB;MAAAA,iBAAI","names":["ReadBookComponent","constructor","userService","tokenStorageService","ngOnInit","isLoggedIn","getToken","user","getUser","readerEmail","email","readerId","id","getBookContent","bookId","subscribe","data","books","err","content","JSON","parse","error","message","selectors","inputs","decls","vars","template","i0"],"sourceRoot":"","sources":["R:\\Rubesh\\Personal\\Documents\\Work Experience\\03_Cognizant\\H&T Training\\Workspace\\Angular\\DigitalBook\\src\\app\\read-book\\read-book.component.ts","R:\\Rubesh\\Personal\\Documents\\Work Experience\\03_Cognizant\\H&T Training\\Workspace\\Angular\\DigitalBook\\src\\app\\read-book\\read-book.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { TokenStorageService } from '../_services/token-storage.service';\nimport { UserService } from '../_services/user.service';\n\n@Component({\n  selector: 'app-read-book',\n  templateUrl: './read-book.component.html',\n  styleUrls: ['./read-book.component.css']\n})\nexport class ReadBookComponent implements OnInit{\n\n  @Input() bookId : any;\n  \n  constructor(private userService: UserService,private tokenStorageService: TokenStorageService) { }\n\n  content?: string[];\n  books :any = [];\n  isLoggedIn = false;\n  readerEmail : string = \"\";\n  readerId : number = 0;\n  message : any = null;\n\n  \n\n  ngOnInit(): void {\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\n    if (this.isLoggedIn) {\n      const user = this.tokenStorageService.getUser();\n      this.readerEmail = user.email;\n      this.readerId = user.id;\n    }\n\n    this.userService.getBookContent(this.readerEmail,this.readerId+\"_\"+this.bookId).subscribe(\n      data => {\n      this.books = data;\n      //this.display(this.books);\n      },\n      err => {\n        this.content = JSON.parse(err.error).message;\n      }\n    );\n\n  }\n}\n","<p>read-book works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}