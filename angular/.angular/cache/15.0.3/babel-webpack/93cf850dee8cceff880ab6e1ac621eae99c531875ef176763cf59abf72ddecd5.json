{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/auth.service\";\nimport * as i2 from \"../_services/token-storage.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_form_3_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \" Username is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_form_3_div_13_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_form_3_div_13_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Password must be at least 6 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_form_3_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, LoginComponent_form_3_div_13_div_1_Template, 2, 0, \"div\", 17);\n    i0.ɵɵtemplate(2, LoginComponent_form_3_div_13_div_2_Template, 2, 0, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r5 = i0.ɵɵreference(12);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r5.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r5.errors[\"minlength\"]);\n  }\n}\nfunction LoginComponent_form_3_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Login failed: \", ctx_r7.errorMessage, \" \");\n  }\n}\nfunction LoginComponent_form_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 5, 6);\n    i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_form_3_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const _r2 = i0.ɵɵreference(1);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(_r2.form.valid && ctx_r10.onSubmit());\n    });\n    i0.ɵɵelementStart(2, \"div\", 7)(3, \"label\", 8);\n    i0.ɵɵtext(4, \"Username\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"input\", 9, 10);\n    i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_form_3_Template_input_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.form.username = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, LoginComponent_form_3_div_7_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 7)(9, \"label\", 12);\n    i0.ɵɵtext(10, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"input\", 13, 14);\n    i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_form_3_Template_input_ngModelChange_11_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.form.password = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(13, LoginComponent_form_3_div_13_Template, 3, 2, \"div\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 7)(15, \"button\", 15);\n    i0.ɵɵtext(16, \" Login \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"div\", 7);\n    i0.ɵɵtemplate(18, LoginComponent_form_3_div_18_Template, 2, 1, \"div\", 11);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const _r2 = i0.ɵɵreference(1);\n    const _r3 = i0.ɵɵreference(6);\n    const _r5 = i0.ɵɵreference(12);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.form.username);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors && _r2.submitted);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.form.password);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", _r5.errors && _r2.submitted);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", _r2.submitted && ctx_r0.isLoginFailed);\n  }\n}\nfunction LoginComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Logged in as \", ctx_r1.roles, \". \");\n  }\n}\nexport class LoginComponent {\n  constructor(authService, tokenStorage) {\n    this.authService = authService;\n    this.tokenStorage = tokenStorage;\n    this.form = {\n      username: null,\n      password: null\n    };\n    this.isLoggedIn = false;\n    this.isLoginFailed = false;\n    this.errorMessage = '';\n    this.roles = [];\n  }\n  ngOnInit() {\n    if (this.tokenStorage.getToken()) {\n      this.isLoggedIn = true;\n      this.roles = this.tokenStorage.getUser().roles;\n    }\n  }\n  onSubmit() {\n    const {\n      username,\n      password\n    } = this.form;\n    this.authService.login(username, password).subscribe(data => {\n      this.tokenStorage.saveToken(data.accessToken);\n      this.tokenStorage.saveUser(data);\n      this.isLoginFailed = false;\n      this.isLoggedIn = true;\n      this.roles = this.tokenStorage.getUser().roles;\n      this.reloadPage();\n    }, err => {\n      this.errorMessage = err.error.message;\n      this.isLoginFailed = true;\n    });\n  }\n  reloadPage() {\n    window.location.reload();\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.TokenStorageService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 5,\n  vars: 2,\n  consts: [[1, \"col-md-12\"], [1, \"card\", \"card-container\"], [\"id\", \"profile-img\", \"src\", \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\", 1, \"profile-img-card\"], [\"name\", \"form\", \"novalidate\", \"\", 3, \"ngSubmit\", 4, \"ngIf\"], [\"class\", \"alert alert-success\", 4, \"ngIf\"], [\"name\", \"form\", \"novalidate\", \"\", 3, \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"name\", \"username\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"username\", \"ngModel\"], [\"class\", \"alert alert-danger\", \"role\", \"alert\", 4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"name\", \"password\", \"required\", \"\", \"minlength\", \"6\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"password\", \"ngModel\"], [1, \"btn\", \"btn-primary\", \"btn-block\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\"], [4, \"ngIf\"], [1, \"alert\", \"alert-success\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵelement(2, \"img\", 2);\n      i0.ɵɵtemplate(3, LoginComponent_form_3_Template, 19, 5, \"form\", 3);\n      i0.ɵɵtemplate(4, LoginComponent_div_4_Template, 2, 1, \"div\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoggedIn);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoggedIn);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.MinLengthValidator, i4.NgModel, i4.NgForm],\n  styles: [\"label[_ngcontent-%COMP%] {\\r\\n  display: block;\\r\\n  margin-top: 10px;\\r\\n}\\r\\n\\r\\n.card-container.card[_ngcontent-%COMP%] {\\r\\n  max-width: 400px !important;\\r\\n  padding: 40px 40px;\\r\\n}\\r\\n\\r\\n.card[_ngcontent-%COMP%] {\\r\\n  background-color: #f7f7f7;\\r\\n  padding: 20px 25px 30px;\\r\\n  margin: 0 auto 25px;\\r\\n  margin-top: 50px;\\r\\n  border-radius: 2px;\\r\\n  box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\\r\\n}\\r\\n\\r\\n.profile-img-card[_ngcontent-%COMP%] {\\r\\n  width: 96px;\\r\\n  height: 96px;\\r\\n  margin: 0 auto 10px;\\r\\n  display: block;\\r\\n  border-radius: 50%;\\r\\n}\\n/*# sourceURL=webpack://./src/app/login/login.component.css */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWM7RUFDZCxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSwyQkFBMkI7RUFDM0Isa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIsZ0JBQWdCO0VBR2hCLGtCQUFrQjtFQUdsQiwwQ0FBMEM7QUFDNUM7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLG1CQUFtQjtFQUNuQixjQUFjO0VBR2Qsa0JBQWtCO0FBQ3BCIiwic291cmNlc0NvbnRlbnQiOlsibGFiZWwge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIG1hcmdpbi10b3A6IDEwcHg7XHJcbn1cclxuXHJcbi5jYXJkLWNvbnRhaW5lci5jYXJkIHtcclxuICBtYXgtd2lkdGg6IDQwMHB4ICFpbXBvcnRhbnQ7XHJcbiAgcGFkZGluZzogNDBweCA0MHB4O1xyXG59XHJcblxyXG4uY2FyZCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y3ZjdmNztcclxuICBwYWRkaW5nOiAyMHB4IDI1cHggMzBweDtcclxuICBtYXJnaW46IDAgYXV0byAyNXB4O1xyXG4gIG1hcmdpbi10b3A6IDUwcHg7XHJcbiAgLW1vei1ib3JkZXItcmFkaXVzOiAycHg7XHJcbiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAycHg7XHJcbiAgYm9yZGVyLXJhZGl1czogMnB4O1xyXG4gIC1tb3otYm94LXNoYWRvdzogMHB4IDJweCAycHggcmdiYSgwLCAwLCAwLCAwLjMpO1xyXG4gIC13ZWJraXQtYm94LXNoYWRvdzogMHB4IDJweCAycHggcmdiYSgwLCAwLCAwLCAwLjMpO1xyXG4gIGJveC1zaGFkb3c6IDBweCAycHggMnB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcclxufVxyXG5cclxuLnByb2ZpbGUtaW1nLWNhcmQge1xyXG4gIHdpZHRoOiA5NnB4O1xyXG4gIGhlaWdodDogOTZweDtcclxuICBtYXJnaW46IDAgYXV0byAxMHB4O1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIC1tb3otYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gIC13ZWJraXQtYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ctx_r10","LoginComponent","constructor","authService","tokenStorage","username","password","ngOnInit","getToken","isLoggedIn","roles","getUser","onSubmit","form","login","subscribe","data","saveToken","accessToken","saveUser","isLoginFailed","reloadPage","err","errorMessage","error","message","window","location","reload","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["R:\\Rubesh\\Personal\\Documents\\Work Experience\\03_Cognizant\\H&T Training\\Workspace\\Angular\\DigitalBook\\src\\app\\login\\login.component.html","R:\\Rubesh\\Personal\\Documents\\Work Experience\\03_Cognizant\\H&T Training\\Workspace\\Angular\\DigitalBook\\src\\app\\login\\login.component.ts"],"sourcesContent":["<div class=\"col-md-12\">\r\n  <div class=\"card card-container\">\r\n    <img\r\n      id=\"profile-img\"\r\n      src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n      class=\"profile-img-card\"\r\n    />\r\n    <form\r\n      *ngIf=\"!isLoggedIn\"\r\n      name=\"form\"\r\n      (ngSubmit)=\"f.form.valid && onSubmit()\"\r\n      #f=\"ngForm\"\r\n      novalidate\r\n    >\r\n      <div class=\"form-group\">\r\n        <label for=\"username\">Username</label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          name=\"username\"\r\n          [(ngModel)]=\"form.username\"\r\n          required\r\n          #username=\"ngModel\"\r\n        />\r\n        <div\r\n          class=\"alert alert-danger\"\r\n          role=\"alert\"\r\n          *ngIf=\"username.errors && f.submitted\"\r\n        >\r\n          Username is required!\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          class=\"form-control\"\r\n          name=\"password\"\r\n          [(ngModel)]=\"form.password\"\r\n          required\r\n          minlength=\"6\"\r\n          #password=\"ngModel\"\r\n        />\r\n        <div\r\n          class=\"alert alert-danger\"\r\n          role=\"alert\"\r\n          *ngIf=\"password.errors && f.submitted\"\r\n        >\r\n          <div *ngIf=\"password.errors['required']\">Password is required</div>\r\n          <div *ngIf=\"password.errors['minlength']\">\r\n            Password must be at least 6 characters\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <button class=\"btn btn-primary btn-block\">\r\n          Login\r\n        </button>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <div\r\n          class=\"alert alert-danger\"\r\n          role=\"alert\"\r\n          *ngIf=\"f.submitted && isLoginFailed\"\r\n        >\r\n          Login failed: {{ errorMessage }}\r\n        </div>\r\n      </div>\r\n    </form>\r\n\r\n    <div class=\"alert alert-success\" *ngIf=\"isLoggedIn\">\r\n      Logged in as {{ roles }}.\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { TokenStorageService } from '../_services/token-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  form: any = {\r\n    username: null,\r\n    password: null\r\n  };\r\n  isLoggedIn = false;\r\n  isLoginFailed = false;\r\n  errorMessage = '';\r\n  roles: string[] = [];\r\n\r\n  constructor(private authService: AuthService, private tokenStorage: TokenStorageService) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.tokenStorage.getToken()) {\r\n      this.isLoggedIn = true;\r\n      this.roles = this.tokenStorage.getUser().roles;\r\n    }\r\n  }\r\n\r\n  onSubmit(): void {\r\n    const { username, password } = this.form;\r\n\r\n    this.authService.login(username, password).subscribe(\r\n      data => {\r\n        this.tokenStorage.saveToken(data.accessToken);\r\n        this.tokenStorage.saveUser(data);\r\n\r\n        this.isLoginFailed = false;\r\n        this.isLoggedIn = true;\r\n        this.roles = this.tokenStorage.getUser().roles;\r\n        this.reloadPage();\r\n      },\r\n      err => {\r\n        this.errorMessage = err.error.message;\r\n        this.isLoginFailed = true;\r\n      }\r\n    );\r\n  }\r\n\r\n  reloadPage(): void {\r\n    window.location.reload();\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}