{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AllMyBooksComponent = class AllMyBooksComponent {\n  constructor(userService, tokenStorageService, sanitizer) {\n    this.userService = userService;\n    this.tokenStorageService = tokenStorageService;\n    this.sanitizer = sanitizer;\n    this.books = [];\n    //jsonVar  = {};\n    this.image = null;\n    this.isLoggedIn = false;\n    this.authorId = 0;\n  }\n  ngOnInit() {\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\n    if (this.isLoggedIn) {\n      const user = this.tokenStorageService.getUser();\n      this.authorId = user.id;\n    }\n    this.userService.getAllBooks(this.authorId).subscribe(data => {\n      this.books = data;\n      this.display(this.books);\n    }, err => {\n      this.content = JSON.parse(err.error).message;\n    });\n  }\n  display(books) {\n    let objectURL = 'data:image/png;base64,' + books[0].logo;\n    this.image = this.sanitizer.bypassSecurityTrustUrl(objectURL);\n  }\n};\nAllMyBooksComponent = __decorate([Component({\n  selector: 'app-all-my-books',\n  templateUrl: './all-my-books.component.html',\n  styleUrls: ['./all-my-books.component.css']\n})], AllMyBooksComponent);\nexport { AllMyBooksComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAU1C,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAO9BC,YAAoBC,WAAwB,EAASC,mBAAwC,EACnFC,SAAuB;IADb,gBAAW,GAAXF,WAAW;IAAsB,wBAAmB,GAAnBC,mBAAmB;IAC9D,cAAS,GAATC,SAAS;IALnB,UAAK,GAAQ,EAAE;IACf;IACA,UAAK,GAAQ,IAAI;IAKjB,eAAU,GAAG,KAAK;IAClB,aAAQ,GAAY,CAAC;EAHgB;EAKrCC,QAAQ;IACN,IAAI,CAACC,UAAU,GAAG,CAAC,CAAC,IAAI,CAACH,mBAAmB,CAACI,QAAQ,EAAE;IACvD,IAAI,IAAI,CAACD,UAAU,EAAE;MACnB,MAAME,IAAI,GAAG,IAAI,CAACL,mBAAmB,CAACM,OAAO,EAAE;MAC/C,IAAI,CAACC,QAAQ,GAAGF,IAAI,CAACG,EAAE;;IAEzB,IAAI,CAACT,WAAW,CAACU,WAAW,CAAC,IAAI,CAACF,QAAQ,CAAC,CAACG,SAAS,CACnDC,IAAI,IAAG;MACP,IAAI,CAACC,KAAK,GAAGD,IAAI;MACjB,IAAI,CAACE,OAAO,CAAC,IAAI,CAACD,KAAK,CAAC;IACxB,CAAC,EACDE,GAAG,IAAG;MACJ,IAAI,CAACC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,GAAG,CAACI,KAAK,CAAC,CAACC,OAAO;IAC9C,CAAC,CACF;EAEH;EAEAN,OAAO,CAACD,KAAW;IACjB,IAAIQ,SAAS,GAAG,wBAAwB,GAAGR,KAAK,CAAC,CAAC,CAAC,CAACS,IAAI;IACxD,IAAI,CAACC,KAAK,GAAG,IAAI,CAACrB,SAAS,CAACsB,sBAAsB,CAACH,SAAS,CAAC;EAC/D;CAED;AApCYvB,mBAAmB,eAL/BD,SAAS,CAAC;EACT4B,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,GACW7B,mBAAmB,CAoC/B;SApCYA,mBAAmB","names":["Component","AllMyBooksComponent","constructor","userService","tokenStorageService","sanitizer","ngOnInit","isLoggedIn","getToken","user","getUser","authorId","id","getAllBooks","subscribe","data","books","display","err","content","JSON","parse","error","message","objectURL","logo","image","bypassSecurityTrustUrl","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["R:\\Rubesh\\Personal\\Documents\\Work Experience\\03_Cognizant\\H&T Training\\Workspace\\Angular\\DigitalBook\\src\\app\\all-my-books\\all-my-books.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { TokenStorageService } from '../_services/token-storage.service';\nimport { UserService } from '../_services/user.service';\n\n@Component({\n  selector: 'app-all-my-books',\n  templateUrl: './all-my-books.component.html',\n  styleUrls: ['./all-my-books.component.css']\n})\nexport class AllMyBooksComponent implements OnInit {\n  content?: string[];\n\n  books :any = [];\n  //jsonVar  = {};\n  image : any= null;\n\n  constructor(private userService: UserService,private tokenStorageService: TokenStorageService,\n    private sanitizer: DomSanitizer) { }\n  \n  isLoggedIn = false;\n  authorId : number = 0;\n\n  ngOnInit(): void {\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\n    if (this.isLoggedIn) {\n      const user = this.tokenStorageService.getUser();\n      this.authorId = user.id;\n    }\n    this.userService.getAllBooks(this.authorId).subscribe(\n      data => {\n      this.books = data;\n      this.display(this.books);\n      },\n      err => {\n        this.content = JSON.parse(err.error).message;\n      }\n    );\n\n  }\n\n  display(books : any) : void {\n    let objectURL = 'data:image/png;base64,' + books[0].logo;\n    this.image = this.sanitizer.bypassSecurityTrustUrl(objectURL);\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}