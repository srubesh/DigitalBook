{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst API_URL = 'http://localhost:8080/digitalbooks/';\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n  }\n  // getPublicContent(): Observable<any> {\n  //   return this.http.get(API_URL + 'all', { responseType: 'text' });\n  // }\n  getAllBooks(authorId) {\n    return this.http.get(API_URL + 'author/' + authorId, {\n      responseType: 'json'\n    });\n  }\n  blockOrUnblockBook(authorId, bookId, block) {\n    return this.http.put(API_URL + 'author/' + authorId + '/books/' + bookId + \"/\" + block, {\n      responseType: 'json'\n    });\n  }\n  //readers/{emailId}/books\n  getSubscribedBooks(readerEmail) {\n    return this.http.get(API_URL + 'readers/' + readerEmail + \"/books\", {\n      responseType: 'json'\n    });\n  }\n  //readers/{email-id}/books/{subscription-id}/cancel-subscription\n  unSbscriveBook(readerEmail, subscriptionId) {\n    return this.http.put(API_URL + 'readers/' + readerEmail + '/books/' + subscriptionId + \"/cancel-subscription\", {\n      responseType: 'json'\n    });\n  }\n  //readers/{emailId}/books/{subscription-id}/read\n  getBookContent(readerEmail, subscriptionId) {\n    return this.http.get(API_URL + 'readers/' + readerEmail + '/books/' + subscriptionId + \"/read\", {\n      responseType: 'json'\n    });\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAIA,MAAMA,OAAO,GAAG,qCAAqC;AAKrD,OAAM,MAAOC,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExC;EACA;EACA;EAEAC,WAAW,CAACC,QAAiB;IAC3B,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAACN,OAAO,GAAG,SAAS,GAACK,QAAQ,EAAE;MAAEE,YAAY,EAAE;IAAM,CAAE,CAAC;EAC9E;EAEAC,kBAAkB,CAACH,QAAiB,EAACI,MAAe,EAAEC,KAAc;IAClE,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAACX,OAAO,GAAG,SAAS,GAACK,QAAQ,GAAC,SAAS,GAACI,MAAM,GAAC,GAAG,GAACC,KAAK,EAAE;MAAEH,YAAY,EAAE;IAAM,CAAE,CAAC;EACzG;EAEA;EACAK,kBAAkB,CAACC,WAAoB;IACrC,OAAO,IAAI,CAACV,IAAI,CAACG,GAAG,CAACN,OAAO,GAAG,UAAU,GAACa,WAAW,GAAC,QAAQ,EAAE;MAAEN,YAAY,EAAE;IAAM,CAAE,CAAC;EAC3F;EAEA;EACAO,cAAc,CAACD,WAAoB,EAAEE,cAAuB;IAC1D,OAAO,IAAI,CAACZ,IAAI,CAACQ,GAAG,CAACX,OAAO,GAAG,UAAU,GAACa,WAAW,GAAC,SAAS,GAACE,cAAc,GAAC,sBAAsB,EAAE;MAAER,YAAY,EAAE;IAAM,CAAE,CAAC;EAClI;EAEA;EACAS,cAAc,CAACH,WAAoB,EAAEE,cAAuB;IAC1D,OAAO,IAAI,CAACZ,IAAI,CAACG,GAAG,CAACN,OAAO,GAAG,UAAU,GAACa,WAAW,GAAC,SAAS,GAACE,cAAc,GAAC,OAAO,EAAE;MAAER,YAAY,EAAE;IAAM,CAAE,CAAC;EACnH;;AA5BWN,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAgB,SAAXhB,WAAW;EAAAiB,YAFV;AAAM","names":["API_URL","UserService","constructor","http","getAllBooks","authorId","get","responseType","blockOrUnblockBook","bookId","block","put","getSubscribedBooks","readerEmail","unSbscriveBook","subscriptionId","getBookContent","factory","providedIn"],"sourceRoot":"","sources":["R:\\Rubesh\\Personal\\Documents\\Work Experience\\03_Cognizant\\H&T Training\\Workspace\\Angular\\DigitalBook\\src\\app\\_services\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst API_URL = 'http://localhost:8080/digitalbooks/';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // getPublicContent(): Observable<any> {\r\n  //   return this.http.get(API_URL + 'all', { responseType: 'text' });\r\n  // }\r\n\r\n  getAllBooks(authorId : number): Observable<any> {\r\n    return this.http.get(API_URL + 'author/'+authorId, { responseType: 'json' });\r\n  }\r\n  \r\n  blockOrUnblockBook(authorId : number,bookId : number, block : string){\r\n    return this.http.put(API_URL + 'author/'+authorId+'/books/'+bookId+\"/\"+block, { responseType: 'json' });\r\n  }\r\n\r\n  //readers/{emailId}/books\r\n  getSubscribedBooks(readerEmail : string): Observable<any> {\r\n    return this.http.get(API_URL + 'readers/'+readerEmail+\"/books\", { responseType: 'json' });\r\n  }\r\n\r\n  //readers/{email-id}/books/{subscription-id}/cancel-subscription\r\n  unSbscriveBook(readerEmail : string, subscriptionId : string){\r\n    return this.http.put(API_URL + 'readers/'+readerEmail+'/books/'+subscriptionId+\"/cancel-subscription\", { responseType: 'json' });\r\n  }\r\n\r\n  //readers/{emailId}/books/{subscription-id}/read\r\n  getBookContent(readerEmail : string, subscriptionId : string){\r\n    return this.http.get(API_URL + 'readers/'+readerEmail+'/books/'+subscriptionId+\"/read\", { responseType: 'json' });\r\n  }\r\n\r\n  // getModeratorBoard(): Observable<any> {\r\n  //   return this.http.get(API_URL + 'mod', { responseType: 'text' });\r\n  // }\r\n\r\n  // getAdminBoard(): Observable<any> {\r\n  //   return this.http.get(API_URL + 'admin', { responseType: 'text' });\r\n  // }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}