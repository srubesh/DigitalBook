{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst API_URL = 'http://localhost:8081/digitalbooks/';\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n  }\n  // getPublicContent(): Observable<any> {\n  //   return this.http.get(API_URL + 'all', { responseType: 'text' });\n  // }\n  //author/{author-id}/books\n  createBook(image, create, authorId) {\n    const formdata = new FormData();\n    formdata.append('image', image);\n    formdata.append('title', create.title);\n    formdata.append('category', create.category);\n    formdata.append('price', create.price);\n    formdata.append('publisher', create.publisher);\n    formdata.append('active', create.active);\n    formdata.append('content', create.content);\n    return this.http.post(API_URL + 'author/' + authorId + '/books', formdata, {\n      responseType: 'json'\n    });\n  }\n  //author/{author-id}/books/{book-id}\n  updateBook(image, update, authorId, bookId) {\n    const formdata = new FormData();\n    formdata.append('image', image);\n    formdata.append('title', update.title);\n    formdata.append('category', update.category);\n    formdata.append('price', update.price);\n    formdata.append('publisher', update.publisher);\n    formdata.append('active', update.active);\n    formdata.append('content', update.content);\n    return this.http.put(API_URL + 'author/' + authorId + '/books/' + bookId, formdata, {\n      responseType: 'json'\n    });\n  }\n  getAllBooks(authorId) {\n    return this.http.get(API_URL + 'author/' + authorId, {\n      responseType: 'json'\n    });\n  }\n  getBook(bookId) {\n    return this.http.get(API_URL + 'test/' + bookId, {\n      responseType: 'json'\n    });\n  }\n  blockOrUnblockBook(authorId, bookId, block) {\n    return this.http.put(API_URL + 'author/' + authorId + '/books/' + bookId + \"/\" + block, {\n      responseType: 'json'\n    });\n  }\n  //readers/{emailId}/books\n  getSubscribedBooks(readerEmail) {\n    return this.http.get(API_URL + 'readers/' + readerEmail + \"/books\", {\n      responseType: 'json'\n    });\n  }\n  //readers/{email-id}/books/{subscription-id}/cancel-subscription\n  unSubscriveBook(readerEmail, subscriptionId) {\n    return this.http.put(API_URL + 'readers/' + readerEmail + '/books/' + subscriptionId + \"/cancel-subscription\", {\n      responseType: 'json'\n    });\n  }\n  ///{book-id}/subscribe\n  subscribeBook(email, bookId) {\n    return this.http.post(API_URL + bookId + '/subscribe', {\n      bookId,\n      email\n    }, {\n      responseType: 'json'\n    });\n  }\n  //readers/{emailId}/books/{subscription-id}/read\n  getBookContent(readerEmail, subscriptionId) {\n    return this.http.get(API_URL + 'readers/' + readerEmail + '/books/' + subscriptionId + \"/read\", {\n      responseType: 'json'\n    });\n  }\n  //all/authors\n  // getAllAuthors(): Observable<any> {\n  //   return this.http.get(API_URL + 'all/authors', { responseType: 'json' });\n  // }\n  //'searchBook?title=&author=&publishedDate=&publisher='\n  searchBook(searchQuery) {\n    if (searchQuery === null || searchQuery === undefined) return this.http.get(API_URL + 'searchBook?title=&author=&publishedDate=&publisher=', {\n      responseType: 'json'\n    });\n    return this.http.get(API_URL + searchQuery, {\n      responseType: 'json'\n    });\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}