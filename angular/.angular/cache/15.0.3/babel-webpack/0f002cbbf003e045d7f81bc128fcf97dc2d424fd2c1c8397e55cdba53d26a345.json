{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nexport class ImagePipePipe {\n  constructor(sanitizer) {\n    this.sanitizer = sanitizer;\n  }\n  transform(value, ...args) {\n    let objectURL = 'data:image/png;base64,' + value;\n    return this.sanitizer.bypassSecurityTrustUrl(objectURL);\n    //return value.toUpperCase();\n  }\n}\n\nImagePipePipe.ɵfac = function ImagePipePipe_Factory(t) {\n  return new (t || ImagePipePipe)(i0.ɵɵdirectiveInject(i1.DomSanitizer, 16));\n};\nImagePipePipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"imagePipe\",\n  type: ImagePipePipe,\n  pure: true\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,aAAa;EAExBC,YAAoBC,SAAuB;IAAvB,cAAS,GAATA,SAAS;EAAgB;EAE7CC,SAAS,CAACC,KAAU,EAAE,GAAGC,IAAe;IACtC,IAAIC,SAAS,GAAG,wBAAwB,GAAGF,KAAK;IAChD,OAAO,IAAI,CAACF,SAAS,CAACK,sBAAsB,CAACD,SAAS,CAAC;IACvD;EACF;;;AARWN,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;;QAAbA,aAAa;EAAAQ;AAAA","names":["ImagePipePipe","constructor","sanitizer","transform","value","args","objectURL","bypassSecurityTrustUrl","pure"],"sourceRoot":"","sources":["R:\\Rubesh\\Personal\\Documents\\Work Experience\\03_Cognizant\\H&T Training\\Workspace\\Angular\\DigitalBook\\src\\app\\image-pipe.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'imagePipe'\n})\nexport class ImagePipePipe implements PipeTransform {\n\n  constructor(private sanitizer: DomSanitizer){}\n\n  transform(value: any, ...args: unknown[]): any {\n    let objectURL = 'data:image/png;base64,' + value;\n    return this.sanitizer.bypassSecurityTrustUrl(objectURL);\n    //return value.toUpperCase();\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}